/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.node;

import simpleAdder.analysis.*;

@SuppressWarnings("nls")
public final class AMultiploDeclaracaoList extends PDeclaracaoList
{
    private PDeclaracaoList _declaracaoList_;
    private PDeclaracao _declaracao_;

    public AMultiploDeclaracaoList()
    {
        // Constructor
    }

    public AMultiploDeclaracaoList(
        @SuppressWarnings("hiding") PDeclaracaoList _declaracaoList_,
        @SuppressWarnings("hiding") PDeclaracao _declaracao_)
    {
        // Constructor
        setDeclaracaoList(_declaracaoList_);

        setDeclaracao(_declaracao_);

    }

    @Override
    public Object clone()
    {
        return new AMultiploDeclaracaoList(
            cloneNode(this._declaracaoList_),
            cloneNode(this._declaracao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiploDeclaracaoList(this);
    }

    public PDeclaracaoList getDeclaracaoList()
    {
        return this._declaracaoList_;
    }

    public void setDeclaracaoList(PDeclaracaoList node)
    {
        if(this._declaracaoList_ != null)
        {
            this._declaracaoList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaracaoList_ = node;
    }

    public PDeclaracao getDeclaracao()
    {
        return this._declaracao_;
    }

    public void setDeclaracao(PDeclaracao node)
    {
        if(this._declaracao_ != null)
        {
            this._declaracao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaracao_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._declaracaoList_)
            + toString(this._declaracao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._declaracaoList_ == child)
        {
            this._declaracaoList_ = null;
            return;
        }

        if(this._declaracao_ == child)
        {
            this._declaracao_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._declaracaoList_ == oldChild)
        {
            setDeclaracaoList((PDeclaracaoList) newChild);
            return;
        }

        if(this._declaracao_ == oldChild)
        {
            setDeclaracao((PDeclaracao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

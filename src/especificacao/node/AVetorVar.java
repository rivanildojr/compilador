/* This file was generated by SableCC (http://www.sablecc.org/). */

package especificacao.node;

import especificacao.analysis.*;

@SuppressWarnings("nls")
public final class AVetorVar extends PVar
{
    private TId _id_;
    private TEsqColchete _esqColchete_;
    private TNInteiro _nInteiro_;
    private TDirColchete _dirColchete_;

    public AVetorVar()
    {
        // Constructor
    }

    public AVetorVar(
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TEsqColchete _esqColchete_,
        @SuppressWarnings("hiding") TNInteiro _nInteiro_,
        @SuppressWarnings("hiding") TDirColchete _dirColchete_)
    {
        // Constructor
        setId(_id_);

        setEsqColchete(_esqColchete_);

        setNInteiro(_nInteiro_);

        setDirColchete(_dirColchete_);

    }

    @Override
    public Object clone()
    {
        return new AVetorVar(
            cloneNode(this._id_),
            cloneNode(this._esqColchete_),
            cloneNode(this._nInteiro_),
            cloneNode(this._dirColchete_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVetorVar(this);
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TEsqColchete getEsqColchete()
    {
        return this._esqColchete_;
    }

    public void setEsqColchete(TEsqColchete node)
    {
        if(this._esqColchete_ != null)
        {
            this._esqColchete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esqColchete_ = node;
    }

    public TNInteiro getNInteiro()
    {
        return this._nInteiro_;
    }

    public void setNInteiro(TNInteiro node)
    {
        if(this._nInteiro_ != null)
        {
            this._nInteiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nInteiro_ = node;
    }

    public TDirColchete getDirColchete()
    {
        return this._dirColchete_;
    }

    public void setDirColchete(TDirColchete node)
    {
        if(this._dirColchete_ != null)
        {
            this._dirColchete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dirColchete_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_)
            + toString(this._esqColchete_)
            + toString(this._nInteiro_)
            + toString(this._dirColchete_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._esqColchete_ == child)
        {
            this._esqColchete_ = null;
            return;
        }

        if(this._nInteiro_ == child)
        {
            this._nInteiro_ = null;
            return;
        }

        if(this._dirColchete_ == child)
        {
            this._dirColchete_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._esqColchete_ == oldChild)
        {
            setEsqColchete((TEsqColchete) newChild);
            return;
        }

        if(this._nInteiro_ == oldChild)
        {
            setNInteiro((TNInteiro) newChild);
            return;
        }

        if(this._dirColchete_ == oldChild)
        {
            setDirColchete((TDirColchete) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

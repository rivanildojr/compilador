/* This file was generated by SableCC (http://www.sablecc.org/). */

package especificacao.node;

import especificacao.analysis.*;

@SuppressWarnings("nls")
public final class ARepitaComando extends PComando
{
    private TRepita _repita_;
    private PCorpo _corpo_;
    private TAte _ate_;
    private TEsqParentese _esqParentese_;
    private PExpLogica _expLogica_;
    private TDirParentese _dirParentese_;
    private TPontoVirgula _pontoVirgula_;

    public ARepitaComando()
    {
        // Constructor
    }

    public ARepitaComando(
        @SuppressWarnings("hiding") TRepita _repita_,
        @SuppressWarnings("hiding") PCorpo _corpo_,
        @SuppressWarnings("hiding") TAte _ate_,
        @SuppressWarnings("hiding") TEsqParentese _esqParentese_,
        @SuppressWarnings("hiding") PExpLogica _expLogica_,
        @SuppressWarnings("hiding") TDirParentese _dirParentese_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setRepita(_repita_);

        setCorpo(_corpo_);

        setAte(_ate_);

        setEsqParentese(_esqParentese_);

        setExpLogica(_expLogica_);

        setDirParentese(_dirParentese_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new ARepitaComando(
            cloneNode(this._repita_),
            cloneNode(this._corpo_),
            cloneNode(this._ate_),
            cloneNode(this._esqParentese_),
            cloneNode(this._expLogica_),
            cloneNode(this._dirParentese_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARepitaComando(this);
    }

    public TRepita getRepita()
    {
        return this._repita_;
    }

    public void setRepita(TRepita node)
    {
        if(this._repita_ != null)
        {
            this._repita_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._repita_ = node;
    }

    public PCorpo getCorpo()
    {
        return this._corpo_;
    }

    public void setCorpo(PCorpo node)
    {
        if(this._corpo_ != null)
        {
            this._corpo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._corpo_ = node;
    }

    public TAte getAte()
    {
        return this._ate_;
    }

    public void setAte(TAte node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public TEsqParentese getEsqParentese()
    {
        return this._esqParentese_;
    }

    public void setEsqParentese(TEsqParentese node)
    {
        if(this._esqParentese_ != null)
        {
            this._esqParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esqParentese_ = node;
    }

    public PExpLogica getExpLogica()
    {
        return this._expLogica_;
    }

    public void setExpLogica(PExpLogica node)
    {
        if(this._expLogica_ != null)
        {
            this._expLogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica_ = node;
    }

    public TDirParentese getDirParentese()
    {
        return this._dirParentese_;
    }

    public void setDirParentese(TDirParentese node)
    {
        if(this._dirParentese_ != null)
        {
            this._dirParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dirParentese_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._repita_)
            + toString(this._corpo_)
            + toString(this._ate_)
            + toString(this._esqParentese_)
            + toString(this._expLogica_)
            + toString(this._dirParentese_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._repita_ == child)
        {
            this._repita_ = null;
            return;
        }

        if(this._corpo_ == child)
        {
            this._corpo_ = null;
            return;
        }

        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._esqParentese_ == child)
        {
            this._esqParentese_ = null;
            return;
        }

        if(this._expLogica_ == child)
        {
            this._expLogica_ = null;
            return;
        }

        if(this._dirParentese_ == child)
        {
            this._dirParentese_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._repita_ == oldChild)
        {
            setRepita((TRepita) newChild);
            return;
        }

        if(this._corpo_ == oldChild)
        {
            setCorpo((PCorpo) newChild);
            return;
        }

        if(this._ate_ == oldChild)
        {
            setAte((TAte) newChild);
            return;
        }

        if(this._esqParentese_ == oldChild)
        {
            setEsqParentese((TEsqParentese) newChild);
            return;
        }

        if(this._expLogica_ == oldChild)
        {
            setExpLogica((PExpLogica) newChild);
            return;
        }

        if(this._dirParentese_ == oldChild)
        {
            setDirParentese((TDirParentese) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
